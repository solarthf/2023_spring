DROP TABLE TEST_MEMBER CASCADE CONSTRAINTS;
CREATE TABLE TEST_MEMBER(
 ID VARCHAR2(15 BYTE),
 PASSWD VARCHAR2(15 BYTE) NOT NULL,
 NAME VARCHAR2(20 BYTE) NOT NULL,
 EMAIL VARCHAR2(30 BYTE),
 CONSTRAINT PK_MEMBER PRIMARY KEY (ID)
);
INSERT ALL
INTO TEST_MEMBER VALUES('admin','admin', '관리자','admin@test.or.kr')
INTO TEST_MEMBER VALUES('user11','pass11','사용자1','user11@test.or.kr')
INTO TEST_MEMBER VALUES('user22','pass22','사용자2','user22@test.or.kr')
SELECT * FROM DUAL;
COMMIT;

INSERT INTO TEST_MEMBER VALUES('user3', 'user3', '사용자3', 'user3@test.or.kr');
INSERT INTO TEST_MEMBER VALUES('user4', 'user4', '사용자4', 'user4@test.or.kr');
INSERT INTO TEST_MEMBER VALUES('user5', 'user5', '사용자5', 'user5@test.or.kr');
select * from TEST_MEMBER;

DELETE from TEST_MEMBER WHERE id = 'user5';
update TEST_MEMBER set name='kh' where id = 'user5';

-- 로그인 성공여부만 알아오기
SELECT COUNT(*) FROM TEST_MEMBER where id = 'user3' and PASSWD = 'user3';

-- 로그인한 계정 정보도 알아오기
SELECT ID, NAME, EMAIL
  FROM TEST_MEMBER where ID = 'user3';

desc TEST_MEMBER;

SELECT * FROM TEST_MEMBER;

DROP TABLE BOARD CASCADE CONSTRAINTS;
CREATE TABLE BOARD (
    BOARD_NUM NUMBER, -- 게시글 번호
    BOARD_TITLE VARCHAR2(50), -- 게시글 제목
    BOARD_WRITER VARCHAR2(15), -- 게시글 작성자
    BOARD_CONTENT VARCHAR2(2000), -- 게시글 내용
    BOARD_ORIGINAL_FILENAME VARCHAR2(100), -- 업로드한 원래 파일명
    BOARD_RENAME_FILENAME VARCHAR2(100), -- 바뀐 파일명
    BOARD_DATE DATE DEFAULT SYSDATE,-- 게시글 올린 날짜
    BOARD_LEVEL NUMBER DEFAULT 0,-- 글레벨 : 원글 0, 원글의 답글 1, 답글의 답글 2
    BOARD_REF NUMBER, -- 원글일때는 자기번호, 답글일 때 참조하는 원글 번호
    BOARD_REPLY_SEQ NUMBER DEFAULT 0, -- 답글의 순번
    BOARD_READCOUNT NUMBER DEFAULT 0, -- 조회수
    CONSTRAINT PK_BOARD PRIMARY KEY (BOARD_NUM),
    CONSTRAINT FK_BOARD_WRITER FOREIGN KEY (BOARD_WRITER) REFERENCES TEST_MEMBER (ID) ON DELETE SET NULL,
    CONSTRAINT FK_BOARD_REF FOREIGN KEY (BOARD_REF) REFERENCES BOARD (BOARD_NUM) ON DELETE CASCADE
);
SELECT * FROM BOARD;
DELETE FROM board;

-- insert 문 3개 정도 확인

INSERT INTO BOARD VALUES(
        (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , '&TITLE', 'user11', '&CONTENT', NULL, NULL, DEFAULT
      , DEFAULT, (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , DEFAULT, DEFAULT 
);
INSERT INTO BOARD VALUES(
        (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , 'B', 'user11', 'bbb', NULL, NULL, DEFAULT
      , DEFAULT, (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , DEFAULT, DEFAULT 
);
INSERT INTO BOARD VALUES(
        (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , 'CCC', 'user11', 'ccc', NULL, NULL, DEFAULT
      , DEFAULT, (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , DEFAULT, DEFAULT 
);
INSERT INTO BOARD VALUES(
        (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , 'DDD', 'user11', 'd', NULL, NULL, DEFAULT
      , DEFAULT, (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , DEFAULT, DEFAULT 
);
INSERT INTO BOARD VALUES(
        (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , 'asdad', 'user6', 'd', NULL, NULL, DEFAULT
      , DEFAULT, (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , DEFAULT, DEFAULT 
);
INSERT INTO BOARD VALUES(
        (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , 'asfqf', 'user6', 'asdd', NULL, NULL, DEFAULT
      , DEFAULT, (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , DEFAULT, DEFAULT 
);
INSERT INTO BOARD VALUES(
        (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , '1111', 'user6', 'agasdg', NULL, NULL, DEFAULT
      , DEFAULT, (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , DEFAULT, DEFAULT 
);
INSERT INTO BOARD VALUES(
        (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , 'user7', 'user7', 'user7', NULL, NULL, DEFAULT
      , DEFAULT, (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , DEFAULT, DEFAULT 
);
INSERT INTO BOARD VALUES(
        (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , '유저7', 'user7', '7777', NULL, NULL, DEFAULT
      , DEFAULT, (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , DEFAULT, DEFAULT 
);
INSERT INTO BOARD VALUES(
        (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , '연습', 'user7', '냉무', NULL, NULL, DEFAULT
      , DEFAULT, (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD)
      , DEFAULT, DEFAULT 
);
-- select 문도 화면설계서대로 잘 나오는지 확인
SELECT * FROM BOARD;

-- 답글 (원글2)
(SELECT BOARD_LEVEL+1 FROM BOARD WHERE BOARD_NUM = 2);
UPDATE BOARD SET BOARD_REPLY_SEQ = BOARD_REPLY_SEQ + 1
 WHERE BOARD_REPLY_SEQ > (SELECT BOARD_REPLY_SEQ FROM BOARD WHERE BOARD_NUM = 2)
   AND BOARD_REF = (SELECT BOARD_REF FROM BOARD WHERE BOARD_NUM = 2);
   
UPDATE BOARD SET BOARD_REPLY_SEQ = BOARD_REPLY_SEQ + 1
 WHERE BOARD_REPLY_SEQ > (SELECT BOARD_REPLY_SEQ FROM BOARD WHERE BOARD_NUM = 3)
   AND BOARD_REF = (SELECT BOARD_REF FROM BOARD WHERE BOARD_NUM = 3);
   
UPDATE BOARD SET BOARD_REPLY_SEQ = BOARD_REPLY_SEQ + 1
 WHERE BOARD_REPLY_SEQ > (SELECT BOARD_REPLY_SEQ FROM BOARD WHERE BOARD_NUM = 15)
   AND BOARD_REF = (SELECT BOARD_REF FROM BOARD WHERE BOARD_NUM = 15);
   
--    

 

--
INSERT INTO BOARD VALUES(
        (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD), '2답', 'user11', '2답', NULL, NULL
      , DEFAULT, (SELECT BOARD_LEVEL+1 FROM BOARD WHERE BOARD_NUM = 2)
      , (SELECT BOARD_REF FROM BOARD WHERE BOARD_NUM = 2)
      , (SELECT BOARD_REPLY_SEQ+1 FROM BOARD WHERE BOARD_NUM = 2), DEFAULT 
);
INSERT INTO BOARD VALUES(
        (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD), '3답2', 'user11', '3답2', NULL, NULL
      , DEFAULT, (SELECT BOARD_LEVEL+1 FROM BOARD WHERE BOARD_NUM = 3)
      , (SELECT BOARD_REF FROM BOARD WHERE BOARD_NUM = 3)
      , (SELECT BOARD_REPLY_SEQ+1 FROM BOARD WHERE BOARD_NUM = 3), DEFAULT 
);
INSERT INTO BOARD VALUES(
        (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD), '15답2', 'user7', '15답글2', NULL, NULL
      , DEFAULT, (SELECT BOARD_LEVEL+1 FROM BOARD WHERE BOARD_NUM = 15)
      , (SELECT BOARD_REF FROM BOARD WHERE BOARD_NUM = 15)
      , (SELECT BOARD_REPLY_SEQ+1 FROM BOARD WHERE BOARD_NUM = 15), DEFAULT 
);
-- INSERT ALL 별칭사용
INSERT ALL INTO BOARD VALUES(
       (SELECT NVL(MAX(BOARD_NUM), 0)+1 FROM BOARD), '2답', 'user11', '2답'
      , BLEVEL, BREF, BSEQ, DEFAULT)
      SELECT BOARD_LEVEL+1 BLEVEL, BOARD_REF BREF, BOARD_REPLY_SEQ+1 BSEQ 
        FROM BOARD WHERE BOARD_NUM = 2;


-- 글 번호 순, 댓글 최신순
SELECT BOARD_NUM, BOARD_TITLE, BOARD_WRITER, BOARD_CONTENT
      , BOARD_ORIGINAL_FILENAME, BOARD_RENAME_FILENAME, BOARD_DATE
      , BOARD_LEVEL, BOARD_REF, BOARD_REPLY_SEQ, BOARD_READCOUNT 
  FROM BOARD
 ORDER BY BOARD_REF DESC, BOARD_REPLY_SEQ ASC;
 
SELECT TO_CHAR(BOARD_DATE, 'yyyy-mm-dd hh24:mi:ss') 
  FROM BOARD
 ORDER BY BOARD_REF ASC, BOARD_REPLY_SEQ ASC;

DELETE FROM BOARD WHERE BOARD_NUM =  '2';
SELECT * FROM BOARD;
desc board;
/* SELECT 문 실행 순서

6  SELECT 
1    FROM
2    JOIN ON/USING
3   WHERE
4   GROUP BY
5  HAVING
7   ORDER BY;

*/

--
/*
과제
페이징 처리중이다. 3번째 글 ~ 7번째 글까지 나타내기
order by를 하면 서브쿼리안에 작성하고 난후에 밖에서 rownum 적용해야 뒤섞이지 않는다.
*/
SELECT rownum rn, tbl_1.* 
  FROM (SELECT BOARD_NUM, BOARD_TITLE, BOARD_WRITER, BOARD_CONTENT
              , BOARD_ORIGINAL_FILENAME, BOARD_RENAME_FILENAME, BOARD_DATE
              , BOARD_LEVEL, BOARD_REF, BOARD_REPLY_SEQ, BOARD_READCOUNT 
           FROM BOARD
          ORDER BY BOARD_REF DESC, BOARD_REPLY_SEQ ASC) tbl_1;

SELECT * 
  FROM (SELECT rownum rn, tbl_1.* 
           FROM (SELECT rownum xn, BOARD_NUM, BOARD_TITLE, BOARD_WRITER, BOARD_CONTENT
                       , BOARD_ORIGINAL_FILENAME, BOARD_RENAME_FILENAME, BOARD_DATE
                       , BOARD_LEVEL, BOARD_REF, BOARD_REPLY_SEQ, BOARD_READCOUNT 
                   FROM BOARD
                  ORDER BY BOARD_REF DESC, BOARD_REPLY_SEQ ASC) tbl_1) tbl_2
 WHERE rn BETWEEN 3 and 7;
